#name: Deploy to Ubuntu
#on:
#  push:
#    branches: [ main ]
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#
#      - name: Build with Gradle
#        run: |
#          ./gradlew clean bootJar
#          ls -la build/libs/
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_TOKEN }}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/motorcyclepick:latest
#
#      - name: Deploy to Ubuntu
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: |
#            ${{ secrets.SSH_PRIVATE_KEY }}
#          port: 22
#          script_stop: true
#          command_timeout: 5m
#          script: |
#            set -e
#            cd ~/motorcyclepick || {
#              cd ~
#              git clone https://github.com/khsqowp/motorcycle_new.git motorcyclepick
#              cd motorcyclepick
#            }
#
#            git fetch origin main
#            git reset --hard origin/main
#
#            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
#
#            echo "Stopping existing services..."
#            docker-compose down || true
#
#            echo "Cleaning up old containers and images..."
#            docker rm -f $(docker ps -aq) || true
#            docker rmi ${{ secrets.DOCKER_USERNAME }}/motorcyclepick:latest || true
#
#            echo "Pulling new image..."
#            docker pull ${{ secrets.DOCKER_USERNAME }}/motorcyclepick:latest
#
#            echo "Starting services..."
#            docker-compose up -d
#
#            echo "Deployment completed successfully!"
name: Deploy to Ubuntu
on:
  push:
    branches: [ main ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: |
          ./gradlew clean bootJar
          ls -la build/libs/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull buildkit image
        run: docker pull moby/buildkit:buildx-stable-1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:buildx-stable-1
          buildkitd-flags: --debug
          driver: docker-container

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/motorcyclepick:latest
          cache-from: |
            type=registry,ref=docker.io/${{ secrets.DOCKER_USERNAME }}/motorcyclepick:buildcache
          cache-to: |
            type=registry,ref=docker.io/${{ secrets.DOCKER_USERNAME }}/motorcyclepick:buildcache,mode=max

      - name: Deploy to Ubuntu
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script_stop: true
          command_timeout: 5m
          script: |
            set -e
            cd ~/motorcyclepick || {
              cd ~
              git clone https://github.com/khsqowp/motorcycle_new.git motorcyclepick
              cd motorcyclepick
            }
            
            git fetch origin main
            git reset --hard origin/main
            
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
            
            echo "Stopping existing services..."
            docker-compose down || true
            
            echo "Cleaning up old containers and images..."
            docker rm -f $(docker ps -aq) || true
            docker rmi docker.io/${{ secrets.DOCKER_USERNAME }}/motorcyclepick:latest || true
            
            echo "Pulling new image..."
            docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/motorcyclepick:latest
            
            echo "Starting services..."
            docker-compose up -d
            
            echo "Deployment completed successfully!"
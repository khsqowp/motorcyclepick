<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.motorcyclepick.repository.ImagesMapper">
    <!-- 이미지 정보 저장 (최종 경로로 저장) -->
    <insert id="insertImage" parameterType="com.example.motorcyclepick.dto.ImagesDTO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO images (file_path, instagram_id, custom)
        VALUES (#{filePath}, #{instagramID}, #{custom})
    </insert>

    <!-- 인스타그램 계정 정보 저장 -->
    <insert id="insertInstagram" parameterType="com.example.motorcyclepick.dto.InstagramDTO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO instagram_accounts (username)
        VALUES (#{username})
    </insert>

    <!-- 파일명으로 이미지 경로 조회 -->
    <select id="getImagePathByFileName" parameterType="String" resultType="String">
        SELECT file_path
        FROM images
        WHERE file_path LIKE CONCAT('%/', #{fileName})
    </select>

    <!-- 브랜드와 모델에 해당하는 이미지 목록 조회 -->
    <select id="getImagesByBrandAndModel" resultType="com.example.motorcyclepick.dto.ImagesDTO">
        SELECT id, file_path, instagram_id as instagramID, custom
        FROM images
        WHERE file_path LIKE CONCAT('images/', #{brand}, '/', #{model}, '_%')
    </select>

    <select id="findInstagramByUsername" parameterType="String" resultType="com.example.motorcyclepick.dto.InstagramDTO">
        SELECT id, username
        FROM instagram_accounts
        WHERE username = #{username}
    </select>

    <select id="getAllImagePathsByBrandAndModel" resultType="String">
        SELECT file_path
        FROM images
        WHERE file_path LIKE CONCAT(#{brand}, '/', #{model}, '_%')
        ORDER BY file_path DESC
    </select>

    <!-- 파일명으로 저장된 이미지 경로들 조회 -->
    <select id="getStoredPathsByFileName" parameterType="String" resultType="String">
        SELECT file_path
        FROM images
        WHERE file_path LIKE CONCAT('%/', #{fileName})
    </select>

    <!-- 브랜드/모델 유효성 검증 -->
    <select id="isValidBrandModel" resultType="boolean">
        SELECT count(*) > 0
        FROM MotorcycleAll
        WHERE brand = #{brand}
          AND model LIKE CONCAT(#{model}, '%')
    </select>


    <select id="findAllBrandsFromFiles" resultType="string">
        SELECT DISTINCT brand
        FROM MotorcycleAll
        ORDER BY brand
    </select>

    <select id="findAllModelsByBrandFromFiles" resultType="string">
        SELECT DISTINCT model
        FROM MotorcycleAll
        WHERE brand = #{brand}
        ORDER BY model
    </select>

    <select id="findAllImagesByBrand" resultType="com.example.motorcyclepick.dto.ImagesDTO">
        SELECT
            i.*,
            ia.username as instagram_username
        FROM images i
                 LEFT JOIN instagram_accounts ia ON i.instagram_id = ia.id
        WHERE i.file_path LIKE CONCAT(#{brand}, '/%')
          AND i.file_path NOT LIKE '%temp%'
          AND i.file_path NOT LIKE '%TrashCan%'
        ORDER BY i.file_path
    </select>

    <select id="findAllImagesByBrandAndModel" resultType="com.example.motorcyclepick.dto.ImagesDTO">
        SELECT
            i.*,
            ia.username as instagram_username
        FROM images i
                 LEFT JOIN instagram_accounts ia ON i.instagram_id = ia.id
        WHERE i.file_path LIKE CONCAT(#{brand}, '/', #{model}, '_%')
          AND i.file_path NOT LIKE '%temp%'
          AND i.file_path NOT LIKE '%TrashCan%'
        ORDER BY i.file_path
    </select>

    <select id="findAllImages" resultType="com.example.motorcyclepick.dto.ImagesDTO">
        SELECT
            i.*,
            ia.username as instagram_username
        FROM images i
                 LEFT JOIN instagram_accounts ia ON i.instagram_id = ia.id
        WHERE i.file_path NOT LIKE '%temp%'
          AND i.file_path NOT LIKE '%TrashCan%'
        ORDER BY i.file_path
    </select>

    <select id="findRecentImagesWithPaging" resultType="com.example.motorcyclepick.dto.ImagesDTO">
        SELECT
            i.*,
            ia.username as instagram_username
        FROM images i
                 LEFT JOIN instagram_accounts ia ON i.instagram_id = ia.id
        WHERE i.file_path NOT LIKE '%temp%'
          AND i.file_path NOT LIKE '%TrashCan%'
        ORDER BY i.id DESC
        OFFSET #{offset} ROWS
            FETCH NEXT #{limit} ROWS ONLY
    </select>

    <!-- 이미지 경로로 이미지 삭제 -->
    <delete id="deleteImageByPath" parameterType="String">
        DELETE FROM images
        WHERE file_path = #{filePath}
    </delete>
</mapper>